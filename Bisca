package main.bisca;

import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.*;

class Resultado {

    Carta cartaGanhador;
    int indexGanhador;
    List<Carta> jogadas;

    Resultado(Carta cartaGanhador, int indexGanhador, List<Carta> jogadas) {
        this.cartaGanhador = cartaGanhador;
        this.indexGanhador = indexGanhador;
        this.jogadas = jogadas;
    }

}

public class Bisca {

    public List<Player> players;
    public Baralho baralho;
    public List<Player> time1;
    public List<Player> time2;

    public Bisca(String p1, String p2) {
        this.baralho = new Baralho();
        
        this.players = new ArrayList<Player>() {
        };
        this.players.add(new Player(p1));
        this.players.add(new Player(p2));

        this.time1 = new ArrayList<Player>() {
        };
        this.time1.add(this.players.get(0));

        this.time2 = new ArrayList<Player>() {
        };
        this.time2.add(this.players.get(1));
    }

    public Bisca(String p1, String p2, String p3, String p4) {
        this.baralho = new Baralho();
        
        this.players = new ArrayList<Player>() {
        };
        this.players.add(new Player(p1));
        this.players.add(new Player(p2));
        this.players.add(new Player(p3));
        this.players.add(new Player(p4));

        this.time1 = new ArrayList<Player>() {
        };
        this.time1.add(this.players.get(0));
        this.time1.add(this.players.get(2));

        this.time2 = new ArrayList<Player>() {
        };
        this.time2.add(this.players.get(1));
        this.time1.add(this.players.get(3));
    }

    void darCartas() {
        int tam = this.players.size();

        for (int i = 0; i < tam; i++) {
            Carta cartaPuxada = this.baralho.pegarCarta();
            this.players.get(i).receberCarta(cartaPuxada);
        }
    }

    void reordenarPlayers(int indexInicial) {
        List<Player> novaOrdemPlayers = new ArrayList<Player>() {
        };

        for (int i = indexInicial; i < this.players.size() + indexInicial; i++) {
            int pegarPos = i % this.players.size();
            Player pegarPlayer = this.players.get(pegarPos);
            novaOrdemPlayers.add(pegarPlayer);
        }

        this.players = novaOrdemPlayers;
    }

    Resultado jogarCartas(Carta trunfo) {
        Carta cartaGanhador = null;
        int indexGanhador = -1;

        List<Carta> jogadas = new ArrayList<Carta>() {
        };

        int tam = this.players.size();
        for (int i = 0; i < tam; i++) {
            Carta jogada = this.players.get(i).usarCarta();

            jogadas.add(jogada);

            if (cartaGanhador == null
                    || (cartaGanhador.naipe.equals(jogada.naipe) && cartaGanhador.ordem < jogada.ordem)
                    || (!(cartaGanhador.naipe.equals(jogada.naipe)) && !(jogada.naipe.equals(trunfo.naipe)))) {
                cartaGanhador = jogada;
                indexGanhador = i;
            }
        }

        return new Resultado(cartaGanhador, indexGanhador, jogadas);
    }
